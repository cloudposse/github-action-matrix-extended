name: Test example positive
on:
#  # Uncomment when test added first time to register workflow and comment it back after workflow would be registered
#  #
#  # Added pull_request to register workflow from the PR.
#  # Read more https://stackoverflow.com/questions/63362126/github-actions-how-to-run-a-workflow-created-on-a-non-master-branch-from-the-wo
#  pull_request: {}
  workflow_dispatch: {}

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Setup
        run: echo "Do setup"

  test:
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: [setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: ./
        id: current
        with:
          stacks: |
            [
                {
                    "stack": "core-ue2-auto",
                    "component": "test-2",
                    "stack_slug": "core-ue2-auto-test-2",
                    "component_path": ""
                },
                {
                    "stack": "core-ue2-auto",
                    "component": "test-4",
                    "stack_slug": "core-ue2-auto-test-4",
                    "component_path": ""
                },
                {
                    "stack": "core-ue2-auto",
                    "component": "test-6",
                    "stack_slug": "core-ue2-auto-test-6",
                    "component_path": ""
                },
                {
                    "stack": "plat-ue2-dev",
                    "component": "test-4",
                    "stack_slug": "plat-ue2-dev-test-4",
                    "component_path": ""
                },
                {
                    "stack": "plat-ue2-sandbox",
                    "component": "test-5",
                    "stack_slug": "plat-ue2-sandbox-test-5",
                    "component_path": ""
                }
            ]
          sort-by: '.stack_slug'
          group-by: '.stack_slug | split("-") | [.[0], .[2]] | join("-")'

    outputs:
      result: "${{ steps.current.outputs.result }}"

  assert:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: nick-fields/assert-action@v1
        with:
          expected: '{"include":[{"name":"core-auto","items":"{\"include\":[{\"stack\":\"core-ue2-auto\",\"component\":\"test-2\",\"stack_slug\":\"core-ue2-auto-test-2\",\"component_path\":\"\"},{\"stack\":\"core-ue2-auto\",\"component\":\"test-4\",\"stack_slug\":\"core-ue2-auto-test-4\",\"component_path\":\"\"},{\"stack\":\"core-ue2-auto\",\"component\":\"test-6\",\"stack_slug\":\"core-ue2-auto-test-6\",\"component_path\":\"\"}]}"},{"name":"plat-dev","items":"{\"include\":[{\"stack\":\"plat-ue2-dev\",\"component\":\"test-4\",\"stack_slug\":\"plat-ue2-dev-test-4\",\"component_path\":\"\"}]}"},{"name":"plat-sandbox","items":"{\"include\":[{\"stack\":\"plat-ue2-sandbox\",\"component\":\"test-5\",\"stack_slug\":\"plat-ue2-sandbox-test-5\",\"component_path\":\"\"}]}"}]}'
          actual: ${{ needs.test.outputs.result }}

  teardown:
    runs-on: ubuntu-latest
    needs: [assert]
    if: ${{ always() }}
    steps:
      - name: Tear down
        run: echo "Do Tear down"
